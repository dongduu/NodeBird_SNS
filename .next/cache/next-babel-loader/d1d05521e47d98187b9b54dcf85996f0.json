{"ast":null,"code":"import { all, fork, put, take } from \"redux-saga/effects\";\nimport axios from \"axois\"; // fork - 비동기 함수 호출\n// call - 동기 함수 호출\n\nfunction logInAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn() {\n  try {\n    const result = yield fork(logInAPI);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    const result = yield fork(logOutAPI);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  // 각각의 이벤트 리스너 역할\n  yield take(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield take(\"LOG_OUT_REQUEST\", logOut);\n}\n\nfunction* watchAddPost() {\n  yield take(\"ADD_POST_REQUEST\");\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]); // all로 이벤트 리스너 등록\n}","map":{"version":3,"sources":["/Users/dongduu/Desktop/NodeBird_SNS/sagas/index.js"],"names":["all","fork","put","take","axios","logInAPI","post","logIn","result","type","data","err","response","logOutAPI","logOut","watchLogIn","watchLogOut","watchAddPost","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AAEA,SAASC,QAAT,GAAoB;AAClB,SAAOD,KAAK,CAACE,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,UAAUC,KAAV,GAAkB;AAChB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMP,IAAI,CAACI,QAAD,CAAzB;AACA,UAAMH,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMT,GAAG,CAAC;AAAEO,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF;AAA7C,KAAD,CAAT;AACD;AACF;;AAED,SAASG,SAAT,GAAqB;AACnB,SAAOT,KAAK,CAACE,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUQ,MAAV,GAAmB;AACjB,MAAI;AACF,UAAMN,MAAM,GAAG,MAAMP,IAAI,CAACY,SAAD,CAAzB;AACA,UAAMX,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAE,iBADE;AAERC,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMT,GAAG,CAAC;AAAEO,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF;AAA7C,KAAD,CAAT;AACD;AACF;;AAED,UAAUK,UAAV,GAAuB;AACrB;AACA,QAAMZ,IAAI,CAAC,gBAAD,EAAmBI,KAAnB,CAAV;AACD;;AAED,UAAUS,WAAV,GAAwB;AACtB,QAAMb,IAAI,CAAC,iBAAD,EAAoBW,MAApB,CAAV;AACD;;AAED,UAAUG,YAAV,GAAyB;AACvB,QAAMd,IAAI,CAAC,kBAAD,CAAV;AACD;;AAED,eAAe,UAAUe,QAAV,GAAqB;AAClC,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACc,UAAD,CAAL,EAAmBd,IAAI,CAACe,WAAD,CAAvB,EAAsCf,IAAI,CAACgB,YAAD,CAA1C,CAAD,CAAT,CADkC,CACoC;AACvE","sourcesContent":["import { all, fork, put, take } from \"redux-saga/effects\";\nimport axios from \"axois\";\n\n// fork - 비동기 함수 호출\n// call - 동기 함수 호출\n\nfunction logInAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn() {\n  try {\n    const result = yield fork(logInAPI);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({ type: \"LOG_IN_FAILURE\", data: err.response.data });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    const result = yield fork(logOutAPI);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({ type: \"LOG_IN_FAILURE\", data: err.response.data });\n  }\n}\n\nfunction* watchLogIn() {\n  // 각각의 이벤트 리스너 역할\n  yield take(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield take(\"LOG_OUT_REQUEST\", logOut);\n}\n\nfunction* watchAddPost() {\n  yield take(\"ADD_POST_REQUEST\");\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]); // all로 이벤트 리스너 등록\n}\n"]},"metadata":{},"sourceType":"module"}
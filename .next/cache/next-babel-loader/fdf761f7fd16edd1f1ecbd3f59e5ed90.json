{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\nimport axios from \"axois\";\n\nfunction addPostAPI() {\n  return axios.post(\"/api/post\");\n}\n\nfunction* addPost() {\n  try {\n    // const result = yield fork(addPostAPI);\n    yield delay(1000);\n    yield put({\n      type: \"ADD_POST_SUCCESS\"\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]); // all로 이벤트 리스너 등록\n}","map":{"version":3,"sources":["/Users/dongduu/Desktop/NodeBird_SNS/sagas/index.js"],"names":["all","fork","put","takeLatest","delay","axios","addPostAPI","post","addPost","type","err","data","response","watchAddPost","rootSaga","watchLogIn","watchLogOut"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,GAAsB;AACpB,SAAOD,KAAK,CAACE,IAAN,CAAW,WAAX,CAAP;AACD;;AAED,UAAUC,OAAV,GAAoB;AAClB,MAAI;AACF;AACA,UAAMJ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAE;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMR,GAAG,CAAC;AAAEO,MAAAA,IAAI,EAAE,kBAAR;AAA4BE,MAAAA,IAAI,EAAED,GAAG,CAACE,QAAJ,CAAaD;AAA/C,KAAD,CAAT;AACD;AACF;;AAED,UAAUE,YAAV,GAAyB;AACvB,QAAMV,UAAU,CAAC,kBAAD,EAAqBK,OAArB,CAAhB;AACD;;AAED,eAAe,UAAUM,QAAV,GAAqB;AAClC,QAAMd,GAAG,CAAC,CAACC,IAAI,CAACc,UAAD,CAAL,EAAmBd,IAAI,CAACe,WAAD,CAAvB,EAAsCf,IAAI,CAACY,YAAD,CAA1C,CAAD,CAAT,CADkC,CACoC;AACvE","sourcesContent":["import { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\nimport axios from \"axois\";\n\nfunction addPostAPI() {\n  return axios.post(\"/api/post\");\n}\n\nfunction* addPost() {\n  try {\n    // const result = yield fork(addPostAPI);\n    yield delay(1000);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n    });\n  } catch (err) {\n    yield put({ type: \"ADD_POST_FAILURE\", data: err.response.data });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]); // all로 이벤트 리스너 등록\n}\n"]},"metadata":{},"sourceType":"module"}
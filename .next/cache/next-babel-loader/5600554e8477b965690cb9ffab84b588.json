{"ast":null,"code":"import { all, fork, put, delay, takeLatest } from \"redux-saga/effects\";\n\nfunction logInAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn() {\n  try {\n    // const result = yield fork(logInAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_IN_SUCCESS\"\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield fork(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\"\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["/Users/dongduu/Desktop/NodeBird_SNS/sagas/user.js"],"names":["all","fork","put","delay","takeLatest","logInAPI","axios","post","logIn","type","err","data","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,KAAzB,EAAgCC,UAAhC,QAAkD,oBAAlD;;AAEA,SAASC,QAAT,GAAoB;AAClB,SAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,UAAUC,KAAV,GAAkB;AAChB,MAAI;AACF;AACA,UAAML,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAE;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMR,GAAG,CAAC;AAAEO,MAAAA,IAAI,EAAE,gBAAR;AAA0BE,MAAAA,IAAI,EAAED,GAAG,CAACE,QAAJ,CAAaD;AAA7C,KAAD,CAAT;AACD;AACF;;AAED,SAASE,SAAT,GAAqB;AACnB,SAAOP,KAAK,CAACC,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUO,MAAV,GAAmB;AACjB,MAAI;AACF;AACA,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAE;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMR,GAAG,CAAC;AAAEO,MAAAA,IAAI,EAAE,iBAAR;AAA2BE,MAAAA,IAAI,EAAED,GAAG,CAACE,QAAJ,CAAaD;AAA9C,KAAD,CAAT;AACD;AACF;;AAED,UAAUI,UAAV,GAAuB;AACrB,QAAMX,UAAU,CAAC,gBAAD,EAAmBI,KAAnB,CAAhB;AACD;;AAED,UAAUQ,WAAV,GAAwB;AACtB,QAAMZ,UAAU,CAAC,iBAAD,EAAoBU,MAApB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMjB,GAAG,CAAC,CAACC,IAAI,CAACc,UAAD,CAAL,EAAmBd,IAAI,CAACe,WAAD,CAAvB,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, put, delay, takeLatest } from \"redux-saga/effects\";\n\nfunction logInAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn() {\n  try {\n    // const result = yield fork(logInAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n    });\n  } catch (err) {\n    yield put({ type: \"LOG_IN_FAILURE\", data: err.response.data });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield fork(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n    });\n  } catch (err) {\n    yield put({ type: \"LOG_OUT_FAILURE\", data: err.response.data });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, put, delay, takeLatest, actionChannel } from \"redux-saga/effects\";\n\nfunction logInAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction logIn() {\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: \"LOG_IN_SUCCESS\",\n            data: action.data\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: \"LOG_IN_FAILURE\",\n            data: _context.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: \"LOG_OUT_SUCCESS\"\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: \"LOG_OUT_FAILURE\",\n            data: _context2.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest(\"LOG_IN_REQUEST\", logIn);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(\"LOG_OUT_REQUEST\", logOut);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["/Users/dongduu/Desktop/NodeBird_SNS/sagas/user.js"],"names":["logIn","logOut","watchLogIn","watchLogOut","userSaga","all","fork","put","delay","takeLatest","actionChannel","logInAPI","axios","post","type","data","action","response","logOutAPI"],"mappings":";;oDAaUA,K;qDAiBAC,M;qDAYAC,U;qDAIAC,W;qDAIeC,Q;;AAlDzB,SACEC,GADF,EAEEC,IAFF,EAGEC,GAHF,EAIEC,KAJF,EAKEC,UALF,EAMEC,aANF,QAOO,oBAPP;;AASA,SAASC,QAAT,GAAoB;AAClB,SAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,SAAUb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMQ,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAAA;AAII,iBAAMD,GAAG,CAAC;AACRO,YAAAA,IAAI,EAAE,gBADE;AAERC,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASI,iBAAMR,GAAG,CAAC;AAAEO,YAAAA,IAAI,EAAE,gBAAR;AAA0BC,YAAAA,IAAI,EAAE,YAAIE,QAAJ,CAAaF;AAA7C,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAASG,SAAT,GAAqB;AACnB,SAAON,KAAK,CAACC,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,SAAUZ,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMO,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAAA;AAII,iBAAMD,GAAG,CAAC;AACRO,YAAAA,IAAI,EAAE;AADE,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQI,iBAAMP,GAAG,CAAC;AAAEO,YAAAA,IAAI,EAAE,iBAAR;AAA2BC,YAAAA,IAAI,EAAE,aAAIE,QAAJ,CAAaF;AAA9C,WAAD,CAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAAUb,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAAC,gBAAD,EAAmBT,KAAnB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUG,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMM,UAAU,CAAC,iBAAD,EAAoBR,MAApB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACC,IAAI,CAACJ,UAAD,CAAL,EAAmBI,IAAI,CAACH,WAAD,CAAvB,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {\n  all,\n  fork,\n  put,\n  delay,\n  takeLatest,\n  actionChannel,\n} from \"redux-saga/effects\";\n\nfunction logInAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn() {\n  try {\n    // const result = yield fork(logInAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({ type: \"LOG_IN_FAILURE\", data: err.response.data });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield fork(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n    });\n  } catch (err) {\n    yield put({ type: \"LOG_OUT_FAILURE\", data: err.response.data });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n"]},"metadata":{},"sourceType":"module"}